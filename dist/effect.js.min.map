{"version":3,"sources":["../lib/Action.js","../lib/Effect.js","../lib/Result.js","../lib/Types.js","../lib/index.js","../lib/perform.js"],"names":["ActionProto","toString","type","this","data","name","_Types","typeName","action","String","dataString","JSON","stringify","Action","exports","Object","create","assign","wrap","unwrap","_ref","_len","arguments","length","args","Array","_key","fn","Effect","EffectProto","then","effect","callback","effectTypes","none","a","call","space","undefined","indent","fnArgs","map","arg","join","fnName","eff","all","effects","nested","_Object$assign","_defineProperty","SideEffect","id","x","copy","arr","es","e","shift","seq","isArray","Error","_effects","_slicedToArray","ResultProto","state","Result","_Effect","result","ResultSymbol","_typeof","Symbol","keyFor","list","obj","Types","_Result","_Action","defaults","view","noop","update","performer","next","actions","_zenObservable2","observer","bind","handleEffect","perform","forEach","error","console","stack","init","nextState","app","listOfLists","reduce","elem","push","performWith","resolve","promise","testing","Promise","_effect","_effect2","effs","flatten","effectPerformer","matcher","reject"],"mappings":"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","file":"effect.js","sourcesContent":["import {typeName} from './Types.js';\nconst ActionProto = {\n    toString() {\n        const {type,data} = this;\n        const name = typeName(type);\n        if(data) {\n            const {action} = data;\n            if(action) {\n                return 'Action('+name+', '+String(data.action)+')';\n            } else {\n                let dataString = String(data);\n                if(dataString === '[object Object]') {\n                    dataString = JSON.stringify(data);\n                }\n                return 'Action('+name+', '+dataString+')';\n            }\n        } else {\n            return 'Action('+name+')';\n        }\n    }\n};\nexport const Action = (type, data) => {\n    const action = Object.create(ActionProto);\n    return Object.assign(action,{type, data});\n};\nconst wrap = (type,data) => action => Action(type, Object.assign(data || {}, {action}));\nconst unwrap = ({data:{action}}) => action;\nAction.wrap = wrap;\nAction.unwrap = unwrap;\n","import {Types, typeName} from './Types.js';\nimport {perform} from './perform.js';\n\nconst SideEffect = Symbol('SideEffect');\n\nexport const effectTypes = Types('none', 'call', 'then', 'all');\n\nconst call = (fn, ...args) => {\n    const type = effectTypes.call;\n    const data = {\n        fn,\n        args,\n    };\n    return Effect(type, data);\n};\nconst EffectProto = {\n    then(fn) {\n        const {type, data} = this;\n        return Effect(\n            effectTypes.then,\n            {\n                effect: this,\n                callback: fn,\n            }\n        );\n    },\n    map(fn) {\n        if(this.type === effectTypes.none) {\n            return Effect.none;\n        }\n        return this.then(function map(a) {\n            return call(fn, a);\n        });\n    },\n    stringify(space='  ', indent='') {\n        const {type, data} = this;\n        const name = typeName(type);\n        if(type === effectTypes.none) {\n            return `[Effect ${name}]`;\n        } else if(type === effectTypes.call) {\n            const {fn, args} = data;\n            const fnName = fn.name || 'fn';\n            const fnArgs = args.map(arg => {\n                return space+String(arg);\n            }).join(',\\n');\n            return [\n                name+'(',\n                space + fnName,\n                fnArgs,\n                indent+ ')'\n            ].join('\\n');\n        } else if(type === effectTypes.then) {\n            const {effect, callback} = data;\n            const fnName = callback.name || 'fn';\n            const eff = effect.stringify('  '+space, space);\n            return [\n                name+'(',\n                space+eff,\n                space+fnName,\n                indent+ ')'\n            ].join('\\n');\n        } else if (type === effectTypes.all) {\n            const {effects} = data;\n            const nested = effects.map(effect => {\n                return space+effect.stringify('  '+space, space);\n            }).join(',\\n');\n            return [\n                name+'([',\n                nested,\n                indent+'])'\n            ].join('\\n');\n        } else {\n            return name+'('+JSON.stringify(data)+')';\n        }\n    },\n    toString() {\n        return this.stringify();\n    }\n};\nexport const Effect = (type, data) => {\n    const effect = Object.create(EffectProto);\n    return Object.assign(effect, {\n        [SideEffect]: true,\n        type,\n        data,\n    });\n};\nEffect.call = call;\nconst none = Effect(effectTypes.none);\nEffect.none = none;\n\nconst seq = (effects) => {\n    const id = x => x;\n    const copy = arr => arr.map(id);\n    const es = copy(effects);\n    const e = es.shift(); //take out the first element\n    if(es.length === 0) {\n        return e;\n    }\n    return Effect(\n        effectTypes.then,\n        {\n            effect: e,\n            callback: () => seq(es),\n        }\n    );\n};\nEffect.seq = seq;\n\nconst all = (effects) => {\n    if(!Array.isArray(effects)) {\n        throw new Error('Need to pass array to Effect.all, got: '+JSON.stringify(effects));\n    }\n    if(effects.length === 0) {\n        return Effect.none;\n    } else if(effects.length === 1) {\n        const [effect] = effects;\n        return effect.map(a => {\n            return [a];\n        });\n    } else {\n        return Effect(\n            effectTypes.all,\n            {\n                effects,\n            }\n        );\n    }\n};\nEffect.all = all;\n","import {Effect,effectTypes} from './Effect.js';\n\nexport const ResultSymbol = Symbol('result');\nconst ResultProto = {\n    toString() {\n        const {state, effect} = this;\n        if(effect.type === effectTypes.none) {\n            return 'Result('+JSON.stringify(state)+')';\n        }\n        return 'Result(\\n  '+JSON.stringify(state)+',\\n  '+effect.stringify('    ', '  ')+'\\n)';\n    }\n}\nexport const Result = (state, effect=Effect.none) => {\n    const result = Object.create(ResultProto);\n    return Object.assign(result,{state, effect, [ResultSymbol]: true});\n};\n","export const typeName = type => typeof type === 'symbol' ? Symbol.keyFor(type) : String(type);\n\nexport const Types = (...list) => {\n    return list.reduce((obj, type) => {\n        obj[type] = Symbol.for(type);\n        return obj;\n    },{});\n};\n","import Observable from 'zen-observable';\nimport {Effect, effectTypes} from './Effect.js';\nimport {Types, typeName} from './Types.js';\nimport {Result, ResultSymbol} from './Result.js';\nimport {Action} from './Action.js';\nimport {performWith} from './perform.js';\n\nexport {Effect, Types, Result, Action};\n\nconst noop = () => {};\n\nconst app = (options) => {\n    const defaults = {\n        view: noop\n    };\n    const {init, update, view, performer} = Object.assign(defaults, options);\n    const perform = performWith(performer);\n    let next;\n    const actions = new Observable(observer => {\n        next = observer.next.bind(observer);\n    });\n    const handleEffect = (effect) => {\n        perform(effect)\n        .then(actions => {\n            actions.forEach(next);\n        })\n        .catch(error => {\n            console.error(error.stack);\n        });\n    };\n    const result = init();\n    // console.log(String(result));\n    let {state, effect} = result;\n    view(state);\n    handleEffect(effect);\n    actions.forEach(action => {\n        const {type} = action;\n        const result = update(state, action);\n        if(!result || !result[ResultSymbol]) {\n            throw new Error(`Unhandled action type ${typeName(type)} for action ${String(action)}`);\n        }\n        const {state: nextState, effect} = result;\n        // console.log(String(result));\n        state = nextState;\n        if(effect.type !== effectTypes.none) {\n            handleEffect(effect);\n        }\n        view(state);\n    })\n    .catch(error => {\n        console.error(error);\n        console.error(error.stack);\n    });\n    return {\n        next\n    };\n}\nEffect.app = app;\n\n","import {effectTypes} from './Effect.js';\nimport {typeName} from './Types.js';\n\nconst flatten = (listOfLists) => {\n    if(listOfLists.length === 0) {\n        return listOfLists;\n    } else {\n        return listOfLists.reduce((result, list) => {\n            list.forEach(elem => result.push(elem));\n            return result;\n        }, []);\n    }\n};\n\nexport const perform = (effect) => {\n    return performWith({});\n};\n\n// perform : Effect Action -> Promise (List Action)\nexport const performWith = performer => (effect) => {\n    const perform = performWith(performer);\n    const {type, data} = effect;\n    return new Promise((resolve, reject) => {\n        if(type === effectTypes.none) {\n            resolve([]); // : Promise (List Action)\n        }\n        else if (type === effectTypes.call) {\n            const {fn, args} = data;\n            const promise = Promise.resolve(fn.apply(fn,args))\n            .then(action => {\n                return [action];\n            });\n            resolve(promise); // : Promise (List Action)\n        }\n        else if (type === effectTypes.then) {\n            const {effect: first, callback, testing} = data;\n            resolve(perform(first).then(actions => { // List Action\n                // callback : List Action -> Effect Action\n                if(actions.length === 0) {\n                    return Promise.resolve([]);\n                }\n                else if(actions.length > 1) {\n                    const effect = callback(actions);\n                    return perform(effect); // : Promise (List Action)\n                } else if(actions.length === 1) {\n                    const action = actions[0];\n                    const effect = callback(action);\n                    return perform(effect);\n                } else {\n                    throw new Error('Should not be able to enter here');\n                }\n            }));\n        }\n        else if (type === effectTypes.all) {\n            const {effects}  = data;\n            const effs = effects.filter(eff => eff.type !== effectTypes.none); // List (Effect Action)\n            if(effs.length === 0) {\n                resolve([]); // : Promise (List Action)\n            } else {\n                resolve(\n                    Promise.all(effs.map(perform)) // (Promise (List (List Action)))\n                    .then(flatten) // Promise (List Action)\n                );\n            }\n        } else {\n            const effectPerformer = performer.matcher(effect);\n            if(!effectPerformer) {\n                const name = typeName(type);\n                reject(new Error(`No performer for type ${name}, ${String(effect)}`));\n            } else {\n                const promise = Promise.resolve(effectPerformer(effect))\n                .then(actions => {\n                    if(!Array.isArray(actions)) {\n                        return [actions];\n                    } else {\n                        return actions;\n                    }\n                });\n                resolve(promise);\n            }\n        }\n    }).then(actions => {\n        return actions;\n    });\n};\n"]}