{"version":3,"sources":["../lib/Action.js","../lib/Effect.js","../lib/Result.js","../lib/Types.js","../lib/index.js","../lib/perform.js","../lib/test.js"],"names":["ActionProto","toString","type","this","data","name","_Types","typeName","action","String","dataString","JSON","stringify","Action","exports","Object","create","assign","wrap","unwrap","_ref","_len","arguments","length","args","Array","_key","fn","Effect","EffectProto","then","effect","callback","effectTypes","none","a","call","space","undefined","indent","fnArgs","map","arg","join","fnName","eff","all","effects","nested","_Object$assign","_defineProperty","SideEffect","types","id","x","copy","arr","es","e","shift","seq","isArray","Error","_effects","_slicedToArray","ResultProto","state","Result","_Effect","result","ResultSymbol","_typeof","Symbol","keyFor","list","obj","Types","_Result","_Action","basePerformer","_perform","testPerformer","performWith","testEffects","_test","defaults","view","noop","update","customPerformer","performer","base","perform","next","actions","_zenObservable2","observer","bind","handleEffect","forEach","error","console","stack","init","nextState","app","listOfLists","reduce","elem","push","first","testing","Promise","resolve","_effect","_effect2","effs","flatten","_ref4","assert","equal","otherEffect","otherFirst","_ref2","_ref3","oa","_otherEffect","_effect3","_otherEffect2","_perform2","_effect4","i","other","otherEffects","apply","effectPerformer","_","b","before","_ref$expected","expected","_ref$expected$effect","_ref$expected$actions","effectEqual","expectedEffect","expectedActions"],"mappings":"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","file":"effect.js","sourcesContent":["import {typeName} from './Types.js';\nconst ActionProto = {\n    toString() {\n        const {type,data} = this;\n        const name = typeName(type);\n        if(data) {\n            const {action} = data;\n            if(action) {\n                return 'Action('+name+', '+String(data.action)+')';\n            } else {\n                let dataString = String(data);\n                if(dataString === '[object Object]') {\n                    dataString = JSON.stringify(data);\n                }\n                return 'Action('+name+', '+dataString+')';\n            }\n        } else {\n            return 'Action('+name+')';\n        }\n    }\n};\nexport const Action = (type, data) => {\n    const action = Object.create(ActionProto);\n    return Object.assign(action,{type, data});\n};\nconst wrap = (type,data) => action => Action(type, Object.assign(data || {}, {action}));\nconst unwrap = ({data:{action}}) => action;\nAction.wrap = wrap;\nAction.unwrap = unwrap;\n","import {Types, typeName} from './Types.js';\nimport {perform} from './perform.js';\n\nexport const SideEffect = Symbol('SideEffect');\n\nexport const effectTypes = Types('none', 'call', 'then', 'all');\n\nconst call = (fn, ...args) => {\n    const type = effectTypes.call;\n    const data = {\n        fn,\n        args,\n    };\n    return Effect(type, data);\n};\nconst EffectProto = {\n    then(fn) {\n        const {type, data} = this;\n        return Effect(\n            effectTypes.then,\n            {\n                effect: this,\n                callback: fn,\n            }\n        );\n    },\n    map(fn) {\n        if(this.type === effectTypes.none) {\n            return Effect.none;\n        }\n        return this.then(function map(a) {\n            return call(fn, a);\n        });\n    },\n    stringify(space='  ', indent='') {\n        const {type, data} = this;\n        const name = typeName(type);\n        if(type === effectTypes.none) {\n            return `[Effect ${name}]`;\n        } else if(type === effectTypes.call) {\n            const {fn, args} = data;\n            const fnName = fn.name || 'fn';\n            const fnArgs = args.map(arg => {\n                return space+String(arg);\n            }).join(',\\n');\n            return [\n                name+'(',\n                space + fnName,\n                fnArgs,\n                indent+ ')'\n            ].join('\\n');\n        } else if(type === effectTypes.then) {\n            const {effect, callback} = data;\n            const fnName = callback.name || 'fn';\n            const eff = effect.stringify('  '+space, space);\n            return [\n                name+'(',\n                space+eff,\n                space+fnName,\n                indent+ ')'\n            ].join('\\n');\n        } else if (type === effectTypes.all) {\n            const {effects} = data;\n            const nested = effects.map(effect => {\n                return space+effect.stringify('  '+space, space);\n            }).join(',\\n');\n            return [\n                name+'([',\n                nested,\n                indent+'])'\n            ].join('\\n');\n        } else {\n            return name+'('+JSON.stringify(data)+')';\n        }\n    },\n    toString() {\n        return this.stringify();\n    }\n};\nexport const Effect = (type, data) => {\n    const effect = Object.create(EffectProto);\n    return Object.assign(effect, {\n        [SideEffect]: true,\n        type,\n        data,\n    });\n};\nEffect.types = effectTypes;\nEffect.call = call;\nconst none = Effect(effectTypes.none);\nEffect.none = none;\n\nconst seq = (effects) => {\n    const id = x => x;\n    const copy = arr => arr.map(id);\n    const es = copy(effects);\n    const e = es.shift(); //take out the first element\n    if(es.length === 0) {\n        return e;\n    }\n    return Effect(\n        effectTypes.then,\n        {\n            effect: e,\n            callback: () => seq(es),\n        }\n    );\n};\nEffect.seq = seq;\n\nconst all = (effects) => {\n    if(!Array.isArray(effects)) {\n        throw new Error('Need to pass array to Effect.all, got: '+JSON.stringify(effects));\n    }\n    if(effects.length === 0) {\n        return Effect.none;\n    } else if(effects.length === 1) {\n        const [effect] = effects;\n        return effect.map(a => {\n            return [a];\n        });\n    } else {\n        return Effect(\n            effectTypes.all,\n            {\n                effects,\n            }\n        );\n    }\n};\nEffect.all = all;\n","import {Effect,effectTypes} from './Effect.js';\n\nexport const ResultSymbol = Symbol('result');\nconst ResultProto = {\n    toString() {\n        const {state, effect} = this;\n        if(effect.type === effectTypes.none) {\n            return 'Result('+JSON.stringify(state)+')';\n        }\n        return 'Result(\\n  '+JSON.stringify(state)+',\\n  '+effect.stringify('    ', '  ')+'\\n)';\n    }\n}\nexport const Result = (state, effect=Effect.none) => {\n    const result = Object.create(ResultProto);\n    return Object.assign(result,{state, effect, [ResultSymbol]: true});\n};\n","export const typeName = type => typeof type === 'symbol' ? Symbol.keyFor(type) : String(type);\n\nexport const Types = (...list) => {\n    return list.reduce((obj, type) => {\n        obj[type] = Symbol.for(type);\n        return obj;\n    },{});\n};\n","import Observable from 'zen-observable';\nimport {Effect, effectTypes, SideEffect} from './Effect.js';\nimport {Types, typeName} from './Types.js';\nimport {Result, ResultSymbol} from './Result.js';\nimport {Action} from './Action.js';\nimport {performWith, basePerformer, testPerformer} from './perform.js';\n\nimport {testEffects} from './test.js';\n\nexport {Effect, Types, Result, Action, SideEffect, basePerformer, testPerformer, performWith, testEffects};\n\nconst noop = () => {};\n\nconst app = (options) => {\n    const defaults = {\n        view: noop\n    };\n    const {init, update, view, performer: customPerformer} = Object.assign(defaults, options);\n    const base = basePerformer();\n    const performer = Object.assign({},base,customPerformer);\n    const perform = performWith(performer);\n    let next;\n    const actions = new Observable(observer => {\n        next = observer.next.bind(observer);\n    });\n    const handleEffect = (effect) => {\n        perform(effect)\n        .then(actions => {\n            actions.forEach(next);\n        })\n        .catch(error => {\n            console.error(error.stack);\n        });\n    };\n    const result = init();\n    // console.log(String(result));\n    let {state, effect} = result;\n    view(state);\n    handleEffect(effect);\n    actions.forEach(action => {\n        const {type} = action;\n        const result = update(state, action);\n        if(!result || !result[ResultSymbol]) {\n            throw new Error(`Unhandled action type ${typeName(type)} for action ${String(action)}`);\n        }\n        const {state: nextState, effect} = result;\n        // console.log(String(result));\n        state = nextState;\n        if(effect.type !== effectTypes.none) {\n            handleEffect(effect);\n        }\n        view(state);\n    })\n    .catch(error => {\n        console.error(error);\n        console.error(error.stack);\n    });\n    return {\n        next\n    };\n}\nEffect.app = app;\n\n","import {typeName} from './Types.js';\nimport {Effect,effectTypes} from './Effect.js';\n\nconst flatten = (listOfLists) => {\n    if(listOfLists.length === 0) {\n        return listOfLists;\n    } else {\n        return listOfLists.reduce((result, list) => {\n            list.forEach(elem => result.push(elem));\n            return result;\n        }, []);\n    }\n};\n\nexport const basePerformer = () => {\n    const {call, none, then, all} = effectTypes;\n    return {\n        [none]: (effect, perform) => {\n            return [];\n        },\n        [then]: (effect, perform) => {\n            const {data} = effect;\n            const {effect: first, callback, testing} = data;\n            return perform(first).then(actions => { // List Action\n                // callback : List Action -> Effect Action\n                if(actions.length === 0) {\n                    return Promise.resolve([]);\n                }\n                else if(actions.length > 1) {\n                    const effect = callback(actions);\n                    return perform(effect); // : Promise (List Action)\n                } else if(actions.length === 1) {\n                    const action = actions[0];\n                    const effect = callback(action);\n                    return perform(effect);\n                } else {\n                    throw new Error('Should not be able to enter here');\n                }\n            });\n        },\n        [all]: (effect, perform) => {\n            const {data} = effect;\n            const {effects}  = data;\n            const effs = effects.filter(eff => eff.type !== effectTypes.none); // List (Effect Action)\n            if(effs.length === 0) {\n                return []; // : Promise (List Action)\n            } else {\n                return Promise.all(effs.map(perform)) // (Promise (List (List Action)))\n                .then(flatten) // Promise (List Action)\n            }\n        },\n        [call]: (effect) => {\n            const {data} = effect;\n            const {fn, args} = data;\n            return Promise.resolve(fn.apply(fn,args))\n            .then(action => [action]);\n        },\n    };\n};\n\n// The test performer applies effects using the callbacks in the test effect\n// to both the test effect and the production effect and asserts that the types are equal for all.\nexport const testPerformer = (otherEffect, assert) => {\n    const {call, none, then, all} = effectTypes;\n    return {\n        [none]: (effect) => {\n            assert.equal(otherEffect.type, none);\n        },\n        [then]: (effect) => {\n            assert.equal(otherEffect.type, then);\n            const {effect: otherFirst} = otherEffect.data;\n            const perform = performWith(testPerformer(otherFirst, assert));\n            const {data} = effect;\n            const {effect: first, testing} = data;\n            const callback = otherEffect.data.callback;\n            return Promise.all([perform(first), perform(otherFirst)])\n            .then(([actions, oa]) => {\n                if(actions.length === 0) {\n                    return [];\n                }\n                else if(actions.length > 1) {\n                    const otherEffect = callback(oa);\n                    const perform = performWith(testPerformer(otherEffect, assert));\n                    const effect = callback(actions);\n                    return perform(effect);\n                } else if(actions.length === 1) {\n                    const otherEffect = callback(oa[0]);\n                    const perform = performWith(testPerformer(otherEffect, assert));\n                    const action = actions[0];\n                    const effect = callback(action);\n                    return perform(effect);\n                } else {\n                    throw new Error('Should not be able to enter here');\n                }\n            });\n        },\n        [all]: (effect) => {\n            assert.equal(otherEffect.type, all);\n            const {data} = effect;\n            const {effects}  = data;\n            const otherEffects = otherEffect.data.effects;\n            return Promise.all(effects.map((effect,i) => {\n                const other = otherEffects[i];\n                const perform = performWith(testPerformer(other, assert));\n                return perform(effect);\n            }))\n            .then(flatten)\n        },\n        [call]: (effect) => {\n            const {data} = effect;\n            const {args} = data;\n            const fn = otherEffect.data.fn;\n            return Promise.resolve(fn.apply(fn,args))\n            .then(action => {\n                return [action];\n            });\n        }\n    };\n};\n\nexport const perform = (effect) => {\n    return performWith(basePerformer);\n};\n\n// perform : Effect Action -> Promise (List Action)\nexport const performWith = performer => (effect) => {\n    const perform = performWith(performer);\n    const {type, data} = effect;\n    const effectPerformer = performer[type];\n    return Promise.resolve().then(() => {\n        if(!effectPerformer) {\n            const name = typeName(type);\n            throw new Error(`No performer for type ${name}, ${String(effect)}`);\n        } else {\n            return Promise.resolve(effectPerformer(effect, perform))\n            .then(actions => {\n                if(!Array.isArray(actions)) {\n                    return [actions];\n                } else {\n                    return actions;\n                }\n            });\n        };\n    });\n};\n","import {performWith, Action, Effect, Types, Result, SideEffect, testPerformer} from '..';\n\nconst effectEqual = (assert, a, b) => {\n    assert(a[SideEffect], String(a));\n    assert(b[SideEffect]);\n    assert.equal(a.type, b.type);\n    const performer = testPerformer(b,assert);\n    const perform = performWith(performer);\n    return perform(a);\n};\n\nexport const testEffects = (fn, assert) => ({\n    action,\n    state: before,\n    expected: {\n        state: expectedState,\n        effect: expectedEffect=Effect.none,\n        actions: expectedActions=[],\n    }\n}) => {\n    const result = fn(before, action);\n    const {state, effect} = result;\n    assert.equal(state, expectedState);\n    return effectEqual(assert, effect, expectedEffect)\n    .then(actions => {\n        actions.map((action,i) => {\n            assert.equal(String(action), String(expectedActions[i]));\n        });\n    });\n};\n"]}